@model object[]

@{
    var elementType = ViewData.ModelMetadata.ModelType.GetElementType();
    var elementMetadata = ModelMetadataProviders.Current.GetMetadataForType(null, elementType);
    object rowTemplate = "ArrayRow";
}

<div id="container-@Html.IdForModel()">
	@if (Model != null)
	{
		for (int i = 0; i < Model.Length; i++)
		{
			<div class="js-array-row" data-index="@i">
				@Html.Hidden("Index", i)
				@Html.EditorFor(m => m[i], rowTemplate.ToString(), additionalViewData: new { RowType = elementType, RowMetadata = elementMetadata })
			</div>
		}
	}
</div>

<a href="#" class="btn btn-default" id="addnewrow-@Html.IdForModel()">Add new @((elementMetadata.DisplayName ?? "row").ToLower())</a>

@{
    var indexTemplate = "ArrayRowIndexTemplate";
}

<script type="text/javascript">
	(function() {
		var newrow = @Html.Raw(Json.Encode(
			Html.Hidden("Index", indexTemplate).ToString() +
			Html.Editor("[" + indexTemplate + "]", rowTemplate.ToString(), additionalViewData: new {RowType = elementType, RowMetadata = elementMetadata}).ToString()
            ));
		$('#addnewrow-@Html.IdForModel()').on('click', function(e) {
			e.preventDefault();
			var parent = $('#container-@Html.IdForModel()');

			var maxIndexArr = parent.find('.js-array-row').map(function() {
				return $(this).data('index');
			});
			if(!maxIndexArr.length) maxIndexArr.push(-1);
			var index = Math.max.apply(Math, maxIndexArr) + 1;

			parent.append($('<div />').attr('class', 'js-array-row').data('index', index).html(newrow.replace(/@(indexTemplate)/g, index)));
			var form = parent.parents('form')
				.removeData("validator") /* added by the raw jquery.validate plugin */
				.removeData("unobtrusiveValidation");  /* added by the jquery unobtrusive plugin */
			$.validator.unobtrusive.parse(form);
		});

		$('#container-@Html.IdForModel()').on('click', '.js-remove-row', function(e) {
			e.preventDefault();
			$(this).parents('.js-array-row').remove();
		});
	})();
</script>